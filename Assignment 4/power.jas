// Author: Bader Adbulwaseem, Sharjeel Junaid, Keegan Barnett


.constant
OBJREF 0x40 // Needed for method invokation
.end-constant

.main

.var  // local variables for main method
a
b
total
.end-var

  start: BIPUSH 0x3 // Initializing a and b for testing
  DUP
  ISTORE a  // Storing local variables
  ISTORE b
  LDC_W OBJREF  // Prepare for method call
  ILOAD a
  ILOAD b
  INVOKEVIRTUAL neg  // Calling multiply method for testing

.end-main

// Power method
// PARAMS: X = Base, Y = Exponent
// RETURNS: Product
.method ipower(x, y)

.end-method

// Multiply method
// PARAMS: X = Multiplier, Y = Multiplicand
// RETURNS: Product
// The method will add a number X to itself Y amount of times
.method imul(x, y)

.var  // local variables for the multiply method
  m
  c
  o
  i
.end-var
  BIPUSH 0x0
  DUP
  // Initializing m and i as 0
  ISTORE m
  ISTORE i


.end-method   // End of multiply method

// PARAMS: x
// RETURNS y
// Takes a number and gives it's absolute value
.method abs(x)

IFLT negative // IF the top of the stack is negative, branch to negative and turn it positive with INEG
GOTO pass // Otherwise pass
negative: INEG  // Negating negative number
pass:
.end-method

// Checks to see which of the top two words is the maximum and then returns the maximum
.method max(x, y)

.end-method

.method neg(x)
INEG
IRETURN
.end-method
